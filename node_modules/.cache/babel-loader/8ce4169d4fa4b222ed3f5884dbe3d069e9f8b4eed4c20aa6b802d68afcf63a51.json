{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"destinations\"\n};\nconst _hoisted_2 = {\n  class: \"destination-details\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"experiences\"\n};\nconst _hoisted_5 = {\n  class: \"cards\",\n  id: \"experience\"\n};\nconst _hoisted_6 = [\"src\", \"alt\"];\nconst _hoisted_7 = {\n  class: \"card__text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GoBack = _resolveComponent(\"GoBack\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_GoBack), _createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($options.destination.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: require(`@/assets/${$options.destination.image}`),\n    alt: $options.destination.name\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"p\", null, _toDisplayString($options.destination.description), 1 /* TEXT */)])]), _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"h2\", null, \"Top experiences in \" + _toDisplayString($options.destination.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.destination.experiences, experience => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: experience.slug,\n      class: \"card\"\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'experienceDetails',\n        params: {\n          experienceSlug: experience.slug\n        },\n        hash: '#experience'\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        src: require(`@/assets/${experience.image}`),\n        alt: experience.name\n      }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(experience.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), (_openBlock(), _createBlock(_component_router_view, {\n    key: _ctx.$route.path\n  }))])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_createVNode","_component_GoBack","_createElementVNode","_hoisted_1","_toDisplayString","$options","destination","name","_hoisted_2","src","require","image","alt","description","_hoisted_4","_hoisted_5","_Fragment","_renderList","experiences","experience","key","slug","_component_router_link","to","_hoisted_7","_createBlock","_component_router_view","_ctx","$route","path"],"sources":["/Users/mac/Desktop/VUE-ROUTER START/looping-to-content-using-router/src/views/DestinationDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <GoBack />\n    <section class=\"destinations\">\n      <h1>\n        {{ destination.name }}\n      </h1>\n      <div class=\"destination-details\">\n        <img\n          :src=\"require(`@/assets/${destination.image}`)\"\n          :alt=\"destination.name\"\n        />\n        <p>{{ destination.description }}</p>\n      </div>\n    </section>\n    <section class=\"experiences\">\n      <h2>Top experiences in {{ destination.name }}</h2>\n      <div class=\"cards\" id=\"experience\">\n        <div\n          v-for=\"experience in destination.experiences\"\n          :key=\"experience.slug\"\n          class=\"card\"\n        >\n          <router-link\n            :to=\"{\n              name: 'experienceDetails',\n              params: { experienceSlug: experience.slug },\n              hash: '#experience',\n            }\"\n          >\n            <img\n              :src=\"require(`@/assets/${experience.image}`)\"\n              :alt=\"experience.name\"\n            />\n            <span class=\"card__text\">\n              {{ experience.name }}\n            </span>\n          </router-link>\n        </div>\n      </div>\n      <router-view :key=\"$route.path\" />\n    </section>\n  </div>\n</template>\n\n<script>\nimport store from \"@/store.js\";\nexport default {\n  data() {\n    return {\n      // slug: this.$route.params.slug,\n    };\n  },\n  //How to pass Vue Router params as props to components\n  props: {\n    slug: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    destination() {\n      return store.destinations.find(\n        (destination) => destination.slug == this.slug\n      );\n    },\n  },\n};\n</script>\n"],"mappings":";;EAGaA,KAAK,EAAC;AAAc;;EAItBA,KAAK,EAAC;AAAqB;;;EAQzBA,KAAK,EAAC;AAAa;;EAErBA,KAAK,EAAC,OAAO;EAACC,EAAE,EAAC;;;;EAiBVD,KAAK,EAAC;AAAY;;;;;uBAjClCE,mBAAA,CAyCM,cAxCJC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAWU,WAXVC,UAWU,GAVRD,mBAAA,CAEK,YAAAE,gBAAA,CADAC,QAAA,CAAAC,WAAW,CAACC,IAAI,kBAErBL,mBAAA,CAMM,OANNM,UAMM,GALJN,mBAAA,CAGE;IAFCO,GAAG,EAAEC,OAAO,aAAaL,QAAA,CAAAC,WAAW,CAACK,KAAK;IAC1CC,GAAG,EAAEP,QAAA,CAAAC,WAAW,CAACC;uCAEpBL,mBAAA,CAAoC,WAAAE,gBAAA,CAA9BC,QAAA,CAAAC,WAAW,CAACO,WAAW,iB,KAGjCX,mBAAA,CA0BU,WA1BVY,UA0BU,GAzBRZ,mBAAA,CAAkD,YAA9C,qBAAmB,GAAAE,gBAAA,CAAGC,QAAA,CAAAC,WAAW,CAACC,IAAI,kBAC1CL,mBAAA,CAsBM,OAtBNa,UAsBM,I,kBArBJhB,mBAAA,CAoBMiB,SAAA,QAAAC,WAAA,CAnBiBZ,QAAA,CAAAC,WAAW,CAACY,WAAW,EAArCC,UAAU;yBADnBpB,mBAAA,CAoBM;MAlBHqB,GAAG,EAAED,UAAU,CAACE,IAAI;MACrBxB,KAAK,EAAC;QAENG,YAAA,CAccsB,sBAAA;MAbXC,EAAE;;;0BAAqFJ,UAAU,CAACE;QAAI;;;;wBAMvG,MAGE,CAHFnB,mBAAA,CAGE;QAFCO,GAAG,EAAEC,OAAO,aAAaS,UAAU,CAACR,KAAK;QACzCC,GAAG,EAAEO,UAAU,CAACZ;2CAEnBL,mBAAA,CAEO,QAFPsB,UAEO,EAAApB,gBAAA,CADFe,UAAU,CAACZ,IAAI,iB;;;;mDAK1BkB,YAAA,CAAkCC,sBAAA;IAApBN,GAAG,EAAEO,IAAA,CAAAC,MAAM,CAACC"},"metadata":{},"sourceType":"module","externalDependencies":[]}